#!/usr/bin/env bash
#
# Copyright Â© 2023 Kizziama <kizziama@proton.me>
#
# SPDX-License-Identifier: Apache-2.0
#

set -e

# Git identity
GIT_USER="xyzuniverse"
GIT_EMAIL="dev.xyzuniverse@gmail.com"
git config --global user.name "$GIT_USER"
git config --global user.email "$GIT_EMAIL"

# Git alias
git config --global alias.cpa "cherry-pick --abort"
git config --global alias.cpc "cherry-pick --continue"
git config --global alias.r "revert --signoff"
git config --global alias.rs "reset --hard"
git config --global alias.l "log"
git config --global alias.s "status"
git config --global alias.ps "push -f -u"
git config --global alias.ra "remote add"
git config --global alias.cp "cherry-pick --signoff"
git config --global alias.cma "commit --amend"

# Git credentials
case "$1" in
    "creds")
        ;&
    "login")
        ;&
    "token")
        if [ ! -f "~/.git-credentials" ]; then
	    echo "[!] Enter your git token"
	    read git_token
	    GIT_TOKEN="$git_token"
	    echo "https://$GIT_USER:$GIT_TOKEN@github.com" >~/.git-credentials
	    git config --global credential.helper "store --file ~/.git-credentials"
        fi
        ;;
    "gpg")
        if [ ! -d "gpg" ]; then
            mkdir gpg
            wget https://raw.githubusercontent.com/xyzuniverse/git/main/gpg/public.gpg -O gpg/public.gpg
            wget https://raw.githubusercontent.com/xyzuniverse/git/main/gpg/private.gpg -O gpg/private.gpg
            wget https://raw.githubusercontent.com/xyzuniverse/git/main/gpg/trust.gpg -O gpg/trust.gpg
	fi

	# Import GPG keys from repository
	gpg --import gpg/public.gpg
	gpg --import gpg/private.gpg
	gpg --import-ownertrust gpg/trust.gpg
	git config --global user.signingkey "5235E7FC540FE8B4"
	git config --global commit.gpgsign true

	# Add GPG TTY to bashrc
	echo "export GPG_TTY=$(tty)" >>~/.bashrc

	# Delete GPG keys after importing
	rm -rf gpg

	echo "Done! Please relaunch bash shell for making GPG keys works properly."
        ;;

    *)
        # Code to handle cases where $1 does not match any expected values
        echo "Invalid argument: $1"
        ;;
esac
